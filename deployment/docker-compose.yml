version: '3.8'
services:
  web:
    container_name: webapp-photography
    build:
      context: ./../webapp/
      dockerfile: ./Dockerfile
      target: dev
    volumes:
      - ./../webapp/src:/usr/app/src
      - ./../webapp/views:/usr/app/views
    command: npm run start:dev
    ports:
      - "3000:3000"
    environment:
      NODE_ENV: development
      DEBUG: nodejs-docker-express:*
      BUILDKIT_PROGRESS: plain
      stdin_open: true # equivalent of -i
      tty: true        # equivalent of -t
    restart: always
    networks:
      - es-net
    
  elasticsearch:
    container_name: es-container
    image: docker.elastic.co/elasticsearch/elasticsearch:7.11.0
    volumes:
      - ./../data/elasticsearch-data/config/certs:/usr/share/elasticsearch/config/certs
      - ./../data/elasticsearch-data/data:/usr/share/elasticsearch/data
    environment:
      - xpack.security.enabled=false
      - discovery.type=single-node
      - bootstrap.memory_lock=true
      - "ES_JAVA_OPTS: -Xmx256m -Xms256m"
    networks:
      - es-net
    ports:
      - 9200:9200
    healthcheck:
      test:
        [
          "CMD-SHELL",
          "curl -s --cacert config/certs/ca/ca.crt https://localhost:9200 | grep -q 'missing authentication credentials'",
        ]
      interval: 10s
      timeout: 10s
      retries: 120

  kibana:
    container_name: kb-container
    image: docker.elastic.co/kibana/kibana:7.11.0
    volumes:
      - ./../data/kibana-data/config/certs:/usr/share/kibana/config/certs
      - ./../data/kibana-data/data:/usr/share/kibana/data
    restart: on-failure
    environment:
      - ELASTICSEARCH_HOSTS=http://es-container:9200
    networks:
      - es-net
    depends_on:
      elasticsearch:
        condition: service_healthy
    ports:
      - 5601:5601
    healthcheck:
      test:
        [
          "CMD-SHELL",
          "curl -s -I http://localhost:5601 | grep -q 'HTTP/1.1 302 Found'",
        ]
      interval: 10s
      timeout: 10s
      retries: 120

networks:
  es-net:
    driver: bridge